{"version":3,"sources":["App.js","index.js"],"names":["App","props","state","randomColorIndex","inputColors","message","author","apiText","onClick","bind","nextColor","nextQuote","fetch","then","response","json","data","setState","this","num","Math","floor","random","randomQuoteNum","quotes","length","quote","chosenColor","bgColor","backgroundColor","textColor","color","htmlTweet","split","join","tweetContent","concat","id","style","href","target","class","React","Component","ReactDOM","render","document","getElementById"],"mappings":"uOAmFgBA,G,wDA/Ed,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,iBAAkB,GAClBC,YAAY,GACZC,QAAS,8HACTC,OAAQ,qBACRC,QAAS,IAEX,EAAKC,QAAU,EAAKA,QAAQC,KAAb,gBACf,EAAKC,UAAY,EAAKA,UAAUD,KAAf,gBACjB,EAAKE,UAAY,EAAKA,UAAUF,KAAf,gBAXA,E,gEAaE,IAAD,OAClBG,MAAM,0IACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ,EAAKC,SAAS,CACZV,QAASS,S,gCAKjBE,KAAKR,YACLQ,KAAKP,c,kCAIL,IAAIQ,EAAOC,KAAKC,MAAsB,GAAhBD,KAAKE,UACvBJ,KAAKhB,MAAMC,mBAAqBgB,EAClCD,KAAKD,SAAS,CACZd,iBAAkBgB,EAAM,IAG1BD,KAAKD,SAAS,CACZd,iBAAkBgB,M,kCAKtB,IAAMI,EAAiBH,KAAKC,MAAMD,KAAKE,SAAWJ,KAAKhB,MAAMK,QAAQiB,OAAOC,QAC5EP,KAAKD,SACH,CAACZ,QAASa,KAAKhB,MAAMK,QAAQiB,OAAOD,GAAgBG,MACnDpB,OAAQY,KAAKhB,MAAMK,QAAQiB,OAAOD,GAAgBjB,W,+BAIrD,IAGMqB,EAHe,CAAC,iBAAkB,iBAAkB,YACpC,MAAO,YAAa,YAAY,YAChC,UAAU,WAAW,YAAY,aACvBT,KAAKhB,MAAMC,kBACrCyB,EAAU,CACdC,gBAAiBF,GAEbG,EAAY,CAChBC,MAAOJ,GAGLK,EADad,KAAKhB,MAAMG,QAAQ4B,MAAM,KACfC,KAAK,OAC5BC,EAAe,yCAAyCC,OAAO,IAAKJ,EAAU,KAAMI,OAAO,UAAYlB,KAAKhB,MAAMI,QACtH,OACE,yBAAK+B,GAAG,WAAWC,MAASV,GAC5B,yBAAKS,GAAG,aACN,uBAAGA,GAAK,OAAOC,MAASR,GACrBZ,KAAKhB,MAAMG,SAEd,uBAAGgC,GAAK,SAASC,MAASR,GACvBZ,KAAKhB,MAAMI,QAEd,yBAAK+B,GAAK,WACR,4BAAQC,MAASV,GAAS,uBAAGS,GAAK,cAAcE,KAAOJ,EAAcK,OAAS,UAAS,uBAAGH,GAAG,SAASI,MAAM,oBAC5G,4BAAQjC,QAAWU,KAAKV,QAAS8B,MAASV,GAAS,uBAAGS,GAAK,aAAR,gBAGvD,uBAAGA,GAAK,SAASE,KAAO,qCAAqCC,OAAS,UAAS,uBAAGC,MAAM,uB,GA3E3EC,IAAMC,YCGzBC,IAASC,OACN,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.62bd08f9.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\n class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      randomColorIndex: '',\n      inputColors:'',\n      message: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed molestie cursus tortor, non fringilla nisi porttitor sit amet.',\n      author: 'Richard McClintock',\n      apiText: ''\n    }\n    this.onClick = this.onClick.bind(this);\n    this.nextColor = this.nextColor.bind(this);\n    this.nextQuote = this.nextQuote.bind(this);\n  }\n  componentDidMount() {\n    fetch('https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json')\n        .then(response => response.json())\n        .then(data => {\n          this.setState({\n            apiText: data\n            })\n        })\n  }\n  onClick() {\n    this.nextColor();\n    this.nextQuote();\n  }\n\n  nextColor() {\n    let num =  Math.floor(Math.random() * 10);\n    if (this.state.randomColorIndex === num){\n      this.setState({\n        randomColorIndex: num + 1\n      })\n    } else {\n      this.setState({\n        randomColorIndex: num\n      })\n    }\n  }\n  nextQuote() {\n    const randomQuoteNum = Math.floor(Math.random() * this.state.apiText.quotes.length);\n    this.setState(\n      {message: this.state.apiText.quotes[randomQuoteNum].quote,\n       author: this.state.apiText.quotes[randomQuoteNum].author\n      })\n  }\n  render() {\n    const colorPalette = [\"DarkAquaMarine\", \"LightSlateGray\", \"IndianRed\", \n                          \"Tan\", \"SteelBlue\", \"CadetBlue\",\"rosybrown\", \n                          \"thistle\",\"seagreen\",\"olivedrap\",\"CadetBlue\"];\n    const chosenColor =colorPalette[this.state.randomColorIndex];\n    const bgColor = {\n      backgroundColor: chosenColor\n    }\n    const textColor = {\n      color: chosenColor\n    }\n    let messageArr = this.state.message.split(\" \");\n    let htmlTweet = messageArr.join(\"%20\");\n    let tweetContent = \"https://twitter.com/intent/tweet?text=\".concat(\"\\\"\"+htmlTweet+\"\\\"\").concat(\"%20-%20\" + this.state.author)\n    return (\n      <div id=\"backdrop\" style = {bgColor}>\n      <div id=\"quote-box\">\n        <p id = \"text\" style = {textColor}>\n          {this.state.message}\n        </p>\n        <p id = \"author\" style = {textColor}>\n          {this.state.author}\n        </p>\n        <div id = \"buttons\">\n          <button style = {bgColor}><a id = \"tweet-quote\" href= {tweetContent} target = \"_blank\"><i id=\"birdie\" class=\"fa fa-twitter\"></i></a></button>\n          <button onClick = {this.onClick} style = {bgColor}><a id = \"new-quote\">New Quote</a></button>\n        </div>\n      </div>\n      <a id = \"github\" href = \"https://github.com/alec-huang-labs\" target = \"_blank\"><i class=\"fa fa-github\"></i></a>\n      </div>\n    );\n    }\n };\n export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n   <App />,\n   document.getElementById('root')\n);\n\n"],"sourceRoot":""}